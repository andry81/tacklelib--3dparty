# CAUTION:
#  In case of usage the QtCreator there is set of special broken cases you have to avoid:
#  1. Invalid characters in paths: `(`, `)` and `.`.
#  2. Non english locale in paths.

# CAUTION:
#  This configuration file is designed to be portable between 3 interpreters: cmake, unix shell scripts, windows (cmd.exe) batch scripts,
#  so it is made up to be simple as possible but not simplier as to support a single value or a values list
#  together with an escape sequence, where the character `\` is not an escape sequence character.
#  Use `$/<char>` to escape a `<char>` character which is a part of a configuration file format:
#  `"` -> `$/"` or `(` -> `$/(` or `$/` -> `$/$/`
#  Use `$/{` as a start sequence for a variable's value substitution: `$/{<variable>}`, where `<variable>`
#  is already parsed variable from configuration file WITHOUT condition(s) or `:` characters. Otherwise a not yet parsed variable or
#  invalid one will be replaced by the `*$/{<variable>}` sequence to fail the most usage cases in a file path,
#  where `*` - is not valid character in a windows path and `/` is a character to block a file or directory creation with
#  such a name on a Linux system (but not a block for `mkdir -p`!).
#  In all other cases the `$/` sequence prints as is in all contexts: in a cmake script, in a unix shell script and in a
#  windows batch script.

# CAUTION:
#  DO NOT USE `@` character pairs unescaped as a plain value as long as it is used as a placehoder in a replacement of `@<variable>@` sequence,
#  where the `<variable>` is a cmake variable. For that case do replace all `@` characters by this escape sequence: `$/@`.
#  It will block the substitution in case of an accidental match of `@<variable>@`, where the `<variable>` ends by the `$/` string.

# NOTE:
#  In a unix shell script a variable name with `:` character is not permitted, so variables with not allowed characters
#  won't be visible in a windows batch script too.

# FORMAT:
#   [<attributes>] <variable>[:[<os_name>][:[<compiler_name>][:[<config_name>][:[<arch_name>]]]]]=<value>
#   [<attributes>] <variable>[:[<os_name>][:[<compiler_name>][:[<config_name>][:[<arch_name>]]]]]=(<value0> [<value1> [... <valueN>]])
#
# <attributes>:           Variable space separated attributes: global | top | bool | path | exist | canonical | cache_only | cache | env_only | env | force_cache | force | override | package | final
# <variable>:             Variable name corresponding to the regex: [_a-zA-Z][_a-zA-Z0-9]*
# <os_name>:              OS variant name: WIN | UNIX | ...
# <compiler_name>:        Compiler variant name with version support: <compiler_token_name>[.<compiler_version>]
#   <compiler_token_name>: MSVC | GCC | CLANG | ...
#   <compiler_version>:   <major_version>[.<minor_version>]
#     <major_version>:    an integral value corresponding to the regex: [0-9]*
#     <minor_version>:    an integral value corresponding to the regex: [0-9]*
# <config_name>:          Configuration name: RELEASE | DEBUG | RELWITHDEBINFO | MINSIZEREL | ...
# <arch_name>:            Architecture variant name: X86 | X64 | ...
#
# <value>:                Value with escaping and substitution support: `$/<escape_char>`, `$/{<variable>}`
#

# PREDEFINED BUILTIN VARIABLES ACCESIBLE FROM THIS FILE:
#
# CMAKE_CURRENT_LOAD_VARS_FILE_INDEX:           Index in a file paths list from which this file have has an ordered load.
# CMAKE_CURRENT_LOAD_VARS_FILE_DIR:             Directory path from which this file being loaded from.
# CMAKE_CURRENT_PACKAGE_NEST_LVL:               Current package nest level.
# CMAKE_CURRENT_PACKAGE_NEST_LVL_PREFIX:        Current package nest level prefix string like `00` if level is `0`, or `01` if level is `1` and so on.
# CMAKE_CURRENT_PACKAGE_NAME:                   Current package name this file being loaded from.
# CMAKE_CURRENT_PACKAGE_SOURCE_DIR:             Current package source directory this file being loaded from.
# CMAKE_TOP_PACKAGE_NAME:                       Top package name.
# CMAKE_TOP_PACKAGE_SOURCE_DIR:                 Top package source directory.
#

# common libraries without binaries or with binaries for all platforms

global RAPIDXML_ROOT="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/common/rapidxml/rapidxml-1.13"

global TBB_ROOT="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/common/tbb/tbb2017_20161128oss"

global SWIG_ROOT="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/common/swig/swigwin-3.0.10"

global MSGPACK_ROOT="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/common/msgpack/msgpack-2.1.1"

global ICONV_ROOT::::X64="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/common/libiconv/libiconv-1.13.1-win64-20100707"
global ICONV_ROOT::::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/common/libiconv/libiconv-1.9.2-1"

# libraries with binaries built for a single platform

global BOOST_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/boost/boost_1_69_0"
global BOOST_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/boost/boost_1_69_0"

# required for boost 1.66 and higher: https://gitlab.kitware.com/cmake/cmake/merge_requests/2568
global Boost_ARCHITECTURE::::X86="-x32"
global Boost_ARCHITECTURE::::X64="-x64"

global QWT_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/qwt/qwt-6.1.3"
global QWT_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/qwt/qwt-6.1.3"

#global GTEST_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/googletest/googletest-release-1.8.0/googletest"
global GTEST_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/googletest/googletest-release-1.8.0/googletest"

#global GMOCK_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/googletest/googletest-release-1.8.0/googlemock"
global GMOCK_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/googletest/googletest-release-1.8.0/googlemock"

#global OMNIORB4_DIR:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/omniorb/omniORB_branch_4_2_6346"
global OMNIORB4_DIR:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/omniorb/omniORB_branch_4_2_6346"

#global ACE_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/tao/6.4.1"
global ACE_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/tao/6.4.1"

#global TAO_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/tao/6.4.1/TAO"
global TAO_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/tao/6.4.1/TAO"

#global LOG4CXX_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/log4cxx/log4cxx-0.10.0"
global LOG4CXX_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/log4cxx/log4cxx-0.10.0"

#global LOG4CPLUS_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/log4cplus/log4cplus-1.2.0"
global LOG4CPLUS_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/log4cplus/log4cplus-1.2.0"

#global XERCESC_ROOT:WIN:GCC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/mingw_gcc_x86/xerces/xerces-c-3.1.3"
global XERCESC_ROOT:WIN:MSVC::X86="$/{CMAKE_CURRENT_LOAD_VARS_FILE_DIR}/vc14_x86/xerces/xerces-c-3.1.3"
